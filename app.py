import streamlit as st
import joblib
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
st.set_page_config(
    page_title="Pr√©diction du diab√®te",
    page_icon="ü©∫",
    layout="centered"
)

st.title("ü©∫ Pr√©diction du diab√®te")
st.write("Cette application utilise le Machine Learning pour estimer le risque de diab√®te √† partir de vos donn√©es m√©dicales.")
# Charger le mod√®le
model = joblib.load("model_diabetes.pkl")

st.title("Pr√©diction du diab√®te avec Machine Learning")

# Champs de saisie
age = st.sidebar.number_input("√Çge", 1, 120, 30)
polyurie = st.sidebar.selectbox("Polyurie", ["Yes", "No"])
polydipsie = st.sidebar.selectbox("Polydipsie", ["Yes", "No"])
obesite = st.sidebar.selectbox("Ob√©sit√©", ["Yes", "No"])

# Encodage Yes/No
mapping = {"Yes":1, "No":0}
features = np.array([[age, mapping[polyurie], mapping[polydipsie], mapping[obesite]]])

if st.button("Pr√©dire"):
    prediction = model.predict(features)
    if prediction[0] == 1:
        st.error("‚ö†Ô∏è Risque √©lev√© de diab√®te")
    else:
        st.success("‚úÖ Pas de risque d√©tect√©")

# Section apr√®s la pr√©diction :

st.subheader("üìä R√©partition simul√©e")
fig, ax = plt.subplots()
ax.bar(["Pas de diab√®te", "Diab√®te"], [1-probas, probas])
st.pyplot(fig)


#Bouton pour t√©l√©charger les r√©sultats

if st.button("üì• T√©l√©charger le rapport"):
    result = pd.DataFrame(features, columns=["√Çge","Polyurie","Polydipsie","Ob√©sit√©"])
    result["Probabilit√© diab√®te"] = [f"{probas*100:.2f}%"]
    result["R√©sultat"] = ["Risque √©lev√©" if prediction[0] == 1 else "Pas de risque"]

    st.download_button(
        label="T√©l√©charger en CSV",
        data=result.to_csv(index=False).encode("utf-8"),
        file_name="rapport_prediction.csv",
        mime="text/csv"
    )
