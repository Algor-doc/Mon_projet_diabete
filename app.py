
import streamlit as st
import joblib
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import plotly.express as px

# Configuration de la page
st.set_page_config(
    page_title="Pr√©diction du diab√®te",
    page_icon="ü©∫",
    layout="wide"
)

# Charger le mod√®le
model = joblib.load("model_diabetes.pkl")

# Titre principal
st.title("ü©∫ Application de pr√©diction du diab√®te")
st.write("Cette application interactive utilise le Machine Learning pour estimer le risque de diab√®te √† partir de donn√©es m√©dicales.")

# Sidebar avec param√®tres
st.sidebar.header("‚öôÔ∏è Param√®tres de saisie")
age = st.sidebar.slider("√Çge", min_value=1, max_value=120, value=30)
polyurie = st.sidebar.selectbox("Polyurie", ["Yes", "No"])
polydipsie = st.sidebar.selectbox("Polydipsie", ["Yes", "No"])
obesite = st.sidebar.selectbox("Ob√©sit√©", ["Yes", "No"])
fatigue = st.sidebar.checkbox("Fatigue persistante")
vision = st.sidebar.checkbox("Vision trouble")

# Mapping des r√©ponses
mapping = {"Yes": 1, "No": 0}
features = np.array([[age, mapping[polyurie], mapping[polydipsie], mapping[obesite],
                      1 if fatigue else 0, 1 if vision else 0]])

# Onglets
tab1, tab2, tab3, tab4 = st.tabs(["üìà Pr√©diction", "üìä Analyse exploratoire", "üìÇ Import CSV", "‚ÑπÔ∏è Explication"])

# --------- Onglet 1 : Pr√©diction ---------
with tab1:
    st.subheader("R√©sultat de la pr√©diction")

    if st.button("üîç Lancer la pr√©diction"):
        prediction = model.predict(features)
        probas = model.predict_proba(features)[0][1]

        st.metric(label="Probabilit√© de diab√®te", value=f"{probas*100:.2f}%")

        # Messages conditionnels
        if probas > 0.7:
            st.warning("‚ö†Ô∏è Risque tr√®s √©lev√© ‚Äì consultez un m√©decin rapidement.")
        elif probas > 0.4:
            st.info("‚ÑπÔ∏è Risque mod√©r√© ‚Äì un suivi m√©dical est recommand√©.")
        else:
            st.success("‚úÖ Pas de risque d√©tect√©.")

        # Graphique visuel
        fig, ax = plt.subplots()
        ax.bar(["Pas de diab√®te", "Diab√®te"], [1-probas, probas], color=["green", "red"])
        st.pyplot(fig)

# --------- Onglet 2 : Analyse exploratoire ---------
with tab2:
    st.subheader("Analyse des donn√©es (exemple sur dataset)")
    try:
        df = pd.read_csv("diabetes_data.csv")  # place un dataset exemple
        fig = px.histogram(df, x="Age", color="class", nbins=20,
                           title="R√©partition par √¢ge et diab√®te")
        st.plotly_chart(fig)
    except:
        st.info("üìå Charge un fichier CSV dans l‚Äôonglet Import CSV pour analyser les donn√©es.")

# --------- Onglet 3 : Import CSV ---------
with tab3:
    st.subheader("üìÇ Importer vos donn√©es m√©dicales")
    uploaded_file = st.file_uploader("T√©l√©chargez un fichier CSV", type=["csv"])

    if uploaded_file is not None:
        user_data = pd.read_csv(uploaded_file)
        st.write("Aper√ßu des donn√©es :", user_data.head())

        try:
            predictions = model.predict(user_data)
            user_data["R√©sultat"] = ["Diab√®te" if p == 1 else "Non diab√©tique" for p in predictions]
            st.write("‚úÖ Pr√©dictions termin√©es :", user_data)

            # T√©l√©chargement des r√©sultats
            st.download_button(
                label="üì• T√©l√©charger les pr√©dictions",
                data=user_data.to_csv(index=False).encode("utf-8"),
                file_name="resultats_prediction.csv",
                mime="text/csv"
            )
        except Exception as e:
            st.error(f"Erreur lors de la pr√©diction : {e}")

# --------- Onglet 4 : Explication ---------
with tab4:
    st.subheader("‚ÑπÔ∏è Explication du mod√®le")
    st.write("""
    Ce mod√®le de Machine Learning a √©t√© entra√Æn√© √† partir du dataset **Early Diabetes Risk Prediction**.
    Il prend en compte plusieurs variables m√©dicales (√¢ge, sympt√¥mes, habitudes) pour pr√©dire si une personne
    pr√©sente un risque de diab√®te.  

    **Important :** Cette application est un outil p√©dagogique et ne remplace pas un diagnostic m√©dical professionnel.
    """)

